{"remainingRequest":"/opt/lampp/htdocs/adminDictionary/node_modules/babel-loader/lib/index.js!/opt/lampp/htdocs/adminDictionary/src/store/role.js","dependencies":[{"path":"/opt/lampp/htdocs/adminDictionary/src/store/role.js","mtime":1580650866581},{"path":"/opt/lampp/htdocs/adminDictionary/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/opt/lampp/htdocs/adminDictionary/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/opt/lampp/htdocs/adminDictionary/src/store/role.js"],"names":["axios","state","roles","dependency","customGetters","GET_ALL_ROLE_DATA","GET_ROLE_DEPENDENCY","map","menu","id","name","customActions","ACT_ALL_ROLES","context","payload","commit","root","get","next_page","then","response","data","catch","exception","console","log","ACT_SEARCH_ROLES","searchKeyword","ACT_DELETE_ROLE","delete","dispatch","current_page","ACT_STORE_ROLE","post","success","ACT_UPDATE_ROLE","ACT_DEPENDENCY_ROLE","customMutations","MUT_ALL_ROLE_DATA","MUT_ROLE_DEPENDENCY","getters","mutations","actions"],"mappings":"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","sourcesContent":["import axios from 'axios';\n\nconst state = {\n    roles: [],\n    dependency: []\n};\n\nconst customGetters = {\n    GET_ALL_ROLE_DATA: function(state) {\n        return state.roles;\n    },\n    GET_ROLE_DEPENDENCY: function(state) {\n        if(state.dependency['menus']) {\n            return state.dependency['menus'].map(menu => {\n                return {\n                    'value': menu.id,\n                    'text': menu.name,\n                };\n            });\n        }\n    },\n};\n\nconst customActions = {\n    ACT_ALL_ROLES: async function (context, payload) {\n        context.commit('MUT_PAGE_LOADING_START', { root: true });\n        await axios.get(`admin-roles?page=${payload.next_page}`)\n            .then(response => {\n                let data = response.data.data;\n                context.commit('MUT_ALL_ROLE_DATA', data);\n                context.commit('MUT_PAGINATION', data, { root: true });\n                context.commit('MUT_PAGE_LOADING_END', { root: true });\n            })\n            .catch(exception => {\n                context.commit('MUT_PAGE_LOADING_END', { root: true });\n                console.log(exception);\n            });\n        context.commit('MUT_PAGE_LOADING_END', { root: true });\n    },\n    ACT_SEARCH_ROLES: async function (context, payload) {\n        await axios.get(`admin-roles?page=${payload.next_page}&searchKeyword=${payload.searchKeyword}`)\n            .then(response => {\n                let data = response.data.data;\n                context.commit('MUT_ALL_ROLE_DATA', data);\n                context.commit('MUT_PAGINATION', data, { root: true });\n            })\n            .catch(exception => {\n                console.log(exception);\n            });\n    },\n    ACT_DELETE_ROLE: async function (context, id) {\n        await axios.delete(`admin-roles/delete/${id}`)\n            .then(response => {\n                context.commit('MUT_DELETE_POPUP_CLOSE', { root: true });\n                context.dispatch('ACT_ALL_ROLES', {\n                    current_page: 1,\n                    next_page: 1\n                });\n            })\n            .catch(exception => {\n                console.log(exception);\n            });\n    },\n    ACT_STORE_ROLE: async function (context, payload) {\n        await axios.post(`admin-roles/store`, payload)\n            .then(response => {\n                let data = response.data;\n                context.commit('MUT_END_LOADING', { root: true });\n                context.commit('MUT_NOTIFICATION', data, { root: true });\n                if(data.success) {\n                    context.commit('MUT_ALL_DIALOG_CLOSE', data, { root: true });\n                    context.dispatch('ACT_ALL_ROLES', {\n                        current_page: 1,\n                        next_page: 1\n                    });\n                }\n            })\n            .catch(exception => {\n                console.log(exception);\n            });\n        context.commit('MUT_PAGE_LOADING_END', { root: true });\n    },\n    ACT_UPDATE_ROLE: async function (context, payload) {\n        await axios.post(`admin-roles/update`, payload)\n            .then(response => {\n                let data = response.data;\n                context.commit('MUT_END_LOADING', { root: true });\n                context.commit('MUT_NOTIFICATION', data, { root: true });\n                if(data.success) {\n                    context.commit('MUT_ALL_DIALOG_CLOSE', data, { root: true });\n                    context.dispatch('ACT_ALL_ROLES', {\n                        current_page: 1,\n                        next_page: 1\n                    });\n                }\n            })\n            .catch(exception => {\n                console.log(exception);\n            });\n        context.commit('MUT_PAGE_LOADING_END', { root: true });\n    },\n    ACT_DEPENDENCY_ROLE: async function (context) {\n        await axios.get(`admin-roles/dependency/data`)\n            .then(response => {\n                let data = response.data;\n                context.commit('MUT_ROLE_DEPENDENCY', data);\n            })\n            .catch(exception => {\n                console.log(exception);\n            });\n    },\n};\n\nconst customMutations = {\n    MUT_ALL_ROLE_DATA: function (state, payload) {\n        state.roles = payload.data;\n    },\n    MUT_ROLE_DEPENDENCY: function (state, payload) {\n        state.dependency = payload.data;\n    },\n};\n\nexport default {\n    state,\n    getters: customGetters,\n    mutations: customMutations,\n    actions: customActions\n}"]}]}