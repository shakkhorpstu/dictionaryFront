{"remainingRequest":"/opt/lampp/htdocs/adminDictionary/node_modules/babel-loader/lib/index.js!/opt/lampp/htdocs/adminDictionary/src/store/sentence.js","dependencies":[{"path":"/opt/lampp/htdocs/adminDictionary/src/store/sentence.js","mtime":1580652643361},{"path":"/opt/lampp/htdocs/adminDictionary/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/opt/lampp/htdocs/adminDictionary/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/opt/lampp/htdocs/adminDictionary/src/store/sentence.js"],"names":["axios","router","state","sentences","sentence","dependency","customGetters","GET_ALL_SENTENCE_DATA","GET_SENTENCE_DEPENDENCY","map","chapter","id","name","GET_SENTENCE_LANGUAGE_DEPENDENCY","language","GET_SINGLE_SENTENCE","customActions","ACT_ALL_SENTENCES","context","payload","commit","root","get","next_page","then","response","data","catch","exception","console","log","ACT_SEARCH_SENTENCES","searchKeyword","ACT_DELETE_SENTENCE","delete","dispatch","current_page","ACT_DEPENDENCY_SENTENCE","ACT_STORE_SENTENCE","post","success","push","ACT_SINGLE_SENTENCE","ACT_UPDATE_SENTENCE","customMutations","MUT_ALL_SENTENCE_DATA","MUT_SENTENCE_DEPENDENCY","MUT_SINGLE_SENTENCE","getters","mutations","actions"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport router from '../router'\n\nconst state = {\n    sentences: [],\n    sentence: {},\n    dependency: []\n};\n\nconst customGetters = {\n    GET_ALL_SENTENCE_DATA: function(state) {\n        return state.sentences;\n    },\n    GET_SENTENCE_DEPENDENCY: function(state) {\n        if(state.dependency['chapters']) {\n            return state.dependency['chapters'].map(chapter => {\n                return {\n                    'value': chapter.id,\n                    'text': chapter.name\n                };\n            });\n        }\n    },\n    GET_SENTENCE_LANGUAGE_DEPENDENCY: function(state) {\n        if(state.dependency['languages']) {\n            return state.dependency['languages'].map(language => {\n                return {\n                    'value': language.id,\n                    'text': language.name\n                };\n            });\n        }\n    },\n    GET_SINGLE_SENTENCE: function(state) {\n        return state.sentence;\n    }\n};\n\nconst customActions = {\n    ACT_ALL_SENTENCES: async function (context, payload) {\n        context.commit('MUT_PAGE_LOADING_START', { root: true });\n        await axios.get(`sentences?page=${payload.next_page}`)\n            .then(response => {\n                let data = response.data.data;\n                context.commit('MUT_ALL_SENTENCE_DATA', data);\n                context.commit('MUT_PAGINATION', data, { root: true });\n                context.commit('MUT_PAGE_LOADING_END', { root: true });\n            })\n            .catch(exception => {\n                context.commit('MUT_PAGE_LOADING_END', { root: true });\n                console.log(exception);\n            });\n        context.commit('MUT_PAGE_LOADING_END', { root: true });\n    },\n    ACT_SEARCH_SENTENCES: async function (context, payload) {\n        await axios.get(`sentences?page=${payload.next_page}&searchKeyword=${payload.searchKeyword}`)\n            .then(response => {\n                let data = response.data.data;\n                context.commit('MUT_ALL_SENTENCE_DATA', data);\n                context.commit('MUT_PAGINATION', data, { root: true });\n            })\n            .catch(exception => {\n                console.log(exception);\n            });\n    },\n    ACT_DELETE_SENTENCE: async function (context, id) {\n        await axios.delete(`sentences/delete/${id}`)\n            .then(response => {\n                context.commit('MUT_DELETE_POPUP_CLOSE', { root: true });\n                context.dispatch('ACT_ALL_SENTENCES', {\n                    current_page: 1,\n                    next_page: 1\n                });\n            })\n            .catch(exception => {\n                console.log(exception);\n            });\n    },\n    ACT_DEPENDENCY_SENTENCE: async function (context) {\n        await axios.get(`sentences/dependency/data`)\n            .then(response => {\n                let data = response.data;\n                context.commit('MUT_SENTENCE_DEPENDENCY', data);\n            })\n            .catch(exception => {\n                console.log(exception);\n            });\n    },\n    ACT_STORE_SENTENCE: async function (context, payload) {\n        await axios.post(`sentences/store`, payload)\n            .then(response => {\n                let data = response.data;\n                context.commit('MUT_END_LOADING', { root: true });\n                context.commit('MUT_NOTIFICATION', data, { root: true });\n                if(data.success) {\n                    router.push({name: 'sentences'});\n                }\n            })\n            .catch(exception => {\n                console.log(exception);\n            });\n        context.commit('MUT_PAGE_LOADING_END', { root: true });\n    },\n    ACT_SINGLE_SENTENCE: async function (context, id) {\n        await axios.get(`sentences/${id}`)\n            .then(response => {\n                let data = response.data;\n                context.commit('MUT_SINGLE_SENTENCE', data);\n            })\n            .catch(exception => {\n                console.log(exception);\n            });\n    },\n    ACT_UPDATE_SENTENCE: async function (context, payload) {\n        await axios.post(`sentences/update`, payload)\n            .then(response => {\n                let data = response.data;\n                context.commit('MUT_END_LOADING', { root: true });\n                context.commit('MUT_NOTIFICATION', data, { root: true });\n                if(data.success) {\n                    router.push({name: 'sentences'});\n                }\n            })\n            .catch(exception => {\n                console.log(exception);\n            });\n        context.commit('MUT_PAGE_LOADING_END', { root: true });\n    },\n};\n\nconst customMutations = {\n    MUT_ALL_SENTENCE_DATA: function (state, payload) {\n        state.sentences = payload.data;\n    },\n    MUT_SENTENCE_DEPENDENCY: function (state, payload) {\n        state.dependency = payload.data;\n    },\n    MUT_SINGLE_SENTENCE: function (state, payload) {\n        state.sentence = payload.data;\n    }\n};\n\nexport default {\n    state,\n    getters: customGetters,\n    mutations: customMutations,\n    actions: customActions\n}"]}]}