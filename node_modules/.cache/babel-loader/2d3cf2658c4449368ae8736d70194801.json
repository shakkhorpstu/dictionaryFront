{"remainingRequest":"/opt/lampp/htdocs/adminDictionary/node_modules/babel-loader/lib/index.js!/opt/lampp/htdocs/adminDictionary/src/store/chapter.js","dependencies":[{"path":"/opt/lampp/htdocs/adminDictionary/src/store/chapter.js","mtime":1581436526200},{"path":"/opt/lampp/htdocs/adminDictionary/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/opt/lampp/htdocs/adminDictionary/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/opt/lampp/htdocs/adminDictionary/src/store/chapter.js"],"names":["axios","router","state","chapters","chapter","dependency","customGetters","GET_ALL_CHAPTER_DATA","GET_CHAPTER_DEPENDENCY","map","id","name","GET_CHAPTER_LANGUAGE_DEPENDENCY","language","GET_SINGLE_CHAPTER","customActions","ACT_ALL_CHAPTERS","context","payload","commit","root","get","next_page","then","response","data","catch","exception","console","log","ACT_SEARCH_CHAPTERS","searchKeyword","ACT_DELETE_CHAPTER","delete","dispatch","current_page","ACT_DEPENDENCY_CHAPTER","ACT_STORE_CHAPTER","post","success","push","ACT_SINGLE_CHAPTER","ACT_UPDATE_CHAPTER","singleChapter","hasImage","image","imgResponse","e","customMutations","MUT_ALL_CHAPTER_DATA","MUT_CHAPTER_DEPENDENCY","MUT_SINGLE_CHAPTER","getters","mutations","actions"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport router from '../router'\n\nconst state = {\n    chapters: [],\n    chapter: {},\n    dependency: []\n};\n\nconst customGetters = {\n    GET_ALL_CHAPTER_DATA: function(state) {\n        return state.chapters;\n    },\n    GET_CHAPTER_DEPENDENCY: function(state) {\n        if(state.dependency['chapters']) {\n            return state.dependency['chapters'].map(chapter => {\n                return {\n                    'value': chapter.id,\n                    'text': chapter.name\n                };\n            });\n        }\n    },\n    GET_CHAPTER_LANGUAGE_DEPENDENCY: function(state) {\n        if(state.dependency['languages']) {\n            return state.dependency['languages'].map(language => {\n                return {\n                    'value': language.id,\n                    'text': language.name\n                };\n            });\n        }\n    },\n    GET_SINGLE_CHAPTER: function(state) {\n        return state.chapter;\n    }\n};\n\nconst customActions = {\n    ACT_ALL_CHAPTERS: async function (context, payload) {\n        context.commit('MUT_PAGE_LOADING_START', { root: true });\n        await axios.get(`chapters?page=${payload.next_page}`)\n            .then(response => {\n                let data = response.data.data;\n                context.commit('MUT_ALL_CHAPTER_DATA', data);\n                context.commit('MUT_PAGINATION', data, { root: true });\n                context.commit('MUT_PAGE_LOADING_END', { root: true });\n            })\n            .catch(exception => {\n                context.commit('MUT_PAGE_LOADING_END', { root: true });\n                console.log(exception);\n            });\n        context.commit('MUT_PAGE_LOADING_END', { root: true });\n    },\n    ACT_SEARCH_CHAPTERS: async function (context, payload) {\n        await axios.get(`chapters?page=${payload.next_page}&searchKeyword=${payload.searchKeyword}`)\n            .then(response => {\n                let data = response.data.data;\n                context.commit('MUT_ALL_CHAPTER_DATA', data);\n                context.commit('MUT_PAGINATION', data, { root: true });\n            })\n            .catch(exception => {\n                console.log(exception);\n            });\n    },\n    ACT_DELETE_CHAPTER: async function (context, id) {\n        await axios.delete(`chapters/delete/${id}`)\n            .then(response => {\n                context.commit('MUT_DELETE_POPUP_CLOSE', { root: true });\n                context.dispatch('ACT_ALL_CHAPTERS', {\n                    current_page: 1,\n                    next_page: 1\n                });\n            })\n            .catch(exception => {\n                console.log(exception);\n            });\n    },\n    ACT_DEPENDENCY_CHAPTER: async function (context) {\n        await axios.get(`chapters/dependency/data`)\n            .then(response => {\n                let data = response.data;\n                context.commit('MUT_CHAPTER_DEPENDENCY', data);\n            })\n            .catch(exception => {\n                console.log(exception);\n            });\n    },\n    ACT_STORE_CHAPTER: async function (context, payload) {\n        await axios.post(`chapters/store`, payload)\n            .then(response => {\n                let data = response.data;\n                context.commit('MUT_END_LOADING', { root: true });\n                context.commit('MUT_NOTIFICATION', data, { root: true });\n                if(data.success) {\n                    router.push({name: 'chapters'});\n                }\n            })\n            .catch(exception => {\n                console.log(exception);\n            });\n        context.commit('MUT_PAGE_LOADING_END', { root: true });\n    },\n    ACT_SINGLE_CHAPTER: async function (context, id) {\n        await axios.get(`chapters/${id}`)\n            .then(response => {\n                let data = response.data;\n                context.commit('MUT_SINGLE_CHAPTER', data);\n            })\n            .catch(exception => {\n                console.log(exception);\n            });\n    },\n    ACT_UPDATE_CHAPTER: async function (context, payload) {\n        await axios.post(`chapters/update`, payload.singleChapter)\n            .then(response => {\n                let data = response.data;\n                if(data.success) {\n                    if(payload.hasImage) {\n                        axios.post(`chapters/update/image/${payload.singleChapter.id}`, payload.image)\n                            .then(imgResponse => {\n                                console.log(imgResponse.data);\n                            })\n                            .catch(e => {\n                                console.log(e);\n                            });\n                    }\n                }\n                context.commit('MUT_END_LOADING', { root: true });\n                context.commit('MUT_NOTIFICATION', data, { root: true });\n                if(data.success) {\n                    router.push({name: 'chapters'});\n                }\n            })\n            .catch(exception => {\n                console.log(exception);\n            });\n        context.commit('MUT_PAGE_LOADING_END', { root: true });\n    },\n};\n\nconst customMutations = {\n    MUT_ALL_CHAPTER_DATA: function (state, payload) {\n        state.chapters = payload.data;\n    },\n    MUT_CHAPTER_DEPENDENCY: function (state, payload) {\n        state.dependency = payload.data;\n    },\n    MUT_SINGLE_CHAPTER: function (state, payload) {\n        state.chapter = payload.data;\n    }\n};\n\nexport default {\n    state,\n    getters: customGetters,\n    mutations: customMutations,\n    actions: customActions\n}"]}]}