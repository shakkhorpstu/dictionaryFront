{"remainingRequest":"/opt/lampp/htdocs/adminDictionary/node_modules/babel-loader/lib/index.js!/opt/lampp/htdocs/adminDictionary/src/store/user.js","dependencies":[{"path":"/opt/lampp/htdocs/adminDictionary/src/store/user.js","mtime":1580652643053},{"path":"/opt/lampp/htdocs/adminDictionary/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/opt/lampp/htdocs/adminDictionary/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0IjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkubWFwIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24ubmFtZSI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lIjsKaW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9vcHQvbGFtcHAvaHRkb2NzL2FkbWluRGljdGlvbmFyeS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvciI7CmltcG9ydCBheGlvcyBmcm9tICdheGlvcyc7CmltcG9ydCByb3V0ZXIgZnJvbSAnLi4vcm91dGVyJzsKdmFyIHN0YXRlID0gewogIHVzZXJzOiBbXSwKICB1c2VyOiB7fSwKICBkZXBlbmRlbmN5OiBbXQp9Owp2YXIgY3VzdG9tR2V0dGVycyA9IHsKICBHRVRfQUxMX1VTRVJfREFUQTogZnVuY3Rpb24gR0VUX0FMTF9VU0VSX0RBVEEoc3RhdGUpIHsKICAgIHJldHVybiBzdGF0ZS51c2VyczsKICB9LAogIEdFVF9VU0VSX0NPVU5UUllfREVQRU5ERU5DWTogZnVuY3Rpb24gR0VUX1VTRVJfQ09VTlRSWV9ERVBFTkRFTkNZKHN0YXRlKSB7CiAgICBpZiAoc3RhdGUuZGVwZW5kZW5jeVsnY291bnRyaWVzJ10pIHsKICAgICAgcmV0dXJuIHN0YXRlLmRlcGVuZGVuY3lbJ2NvdW50cmllcyddLm1hcChmdW5jdGlvbiAoY291bnRyeSkgewogICAgICAgIHJldHVybiB7CiAgICAgICAgICAndmFsdWUnOiBjb3VudHJ5LmlkLAogICAgICAgICAgJ3RleHQnOiBjb3VudHJ5Lm5hbWUKICAgICAgICB9OwogICAgICB9KTsKICAgIH0KICB9LAogIEdFVF9TSU5HTEVfVVNFUjogZnVuY3Rpb24gR0VUX1NJTkdMRV9VU0VSKHN0YXRlKSB7CiAgICByZXR1cm4gc3RhdGUudXNlcjsKICB9Cn07CnZhciBjdXN0b21BY3Rpb25zID0gewogIEFDVF9BTExfVVNFUlM6IGZ1bmN0aW9uICgpIHsKICAgIHZhciBfQUNUX0FMTF9VU0VSUyA9IF9hc3luY1RvR2VuZXJhdG9yKAogICAgLyojX19QVVJFX18qLwogICAgcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZShjb250ZXh0LCBwYXlsb2FkKSB7CiAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICBjb250ZXh0LmNvbW1pdCgnTVVUX1BBR0VfTE9BRElOR19TVEFSVCcsIHsKICAgICAgICAgICAgICAgIHJvb3Q6IHRydWUKICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMzsKICAgICAgICAgICAgICByZXR1cm4gYXhpb3MuZ2V0KCJ1c2Vycz9wYWdlPSIuY29uY2F0KHBheWxvYWQubmV4dF9wYWdlKSkudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHsKICAgICAgICAgICAgICAgIHZhciBkYXRhID0gcmVzcG9uc2UuZGF0YS5kYXRhOwogICAgICAgICAgICAgICAgY29udGV4dC5jb21taXQoJ01VVF9BTExfVVNFUl9EQVRBJywgZGF0YSk7CiAgICAgICAgICAgICAgICBjb250ZXh0LmNvbW1pdCgnTVVUX1BBR0lOQVRJT04nLCBkYXRhLCB7CiAgICAgICAgICAgICAgICAgIHJvb3Q6IHRydWUKICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgY29udGV4dC5jb21taXQoJ01VVF9QQUdFX0xPQURJTkdfRU5EJywgewogICAgICAgICAgICAgICAgICByb290OiB0cnVlCiAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICB9KS5jYXRjaChmdW5jdGlvbiAoZXhjZXB0aW9uKSB7CiAgICAgICAgICAgICAgICBjb250ZXh0LmNvbW1pdCgnTVVUX1BBR0VfTE9BRElOR19FTkQnLCB7CiAgICAgICAgICAgICAgICAgIHJvb3Q6IHRydWUKICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgY29uc29sZS5sb2coZXhjZXB0aW9uKTsKICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgICBjb250ZXh0LmNvbW1pdCgnTVVUX1BBR0VfTE9BRElOR19FTkQnLCB7CiAgICAgICAgICAgICAgICByb290OiB0cnVlCiAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICBjYXNlIDQ6CiAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0sIF9jYWxsZWUpOwogICAgfSkpOwoKICAgIGZ1bmN0aW9uIEFDVF9BTExfVVNFUlMoX3gsIF94MikgewogICAgICByZXR1cm4gX0FDVF9BTExfVVNFUlMuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICAgIH0KCiAgICByZXR1cm4gQUNUX0FMTF9VU0VSUzsKICB9KCksCiAgQUNUX1NFQVJDSF9VU0VSUzogZnVuY3Rpb24gKCkgewogICAgdmFyIF9BQ1RfU0VBUkNIX1VTRVJTID0gX2FzeW5jVG9HZW5lcmF0b3IoCiAgICAvKiNfX1BVUkVfXyovCiAgICByZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMihjb250ZXh0LCBwYXlsb2FkKSB7CiAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMiQoX2NvbnRleHQyKSB7CiAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQyLnByZXYgPSBfY29udGV4dDIubmV4dCkgewogICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSAyOwogICAgICAgICAgICAgIHJldHVybiBheGlvcy5nZXQoInVzZXJzP3BhZ2U9Ii5jb25jYXQocGF5bG9hZC5uZXh0X3BhZ2UsICImc2VhcmNoS2V5d29yZD0iKS5jb25jYXQocGF5bG9hZC5zZWFyY2hLZXl3b3JkKSkudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHsKICAgICAgICAgICAgICAgIHZhciBkYXRhID0gcmVzcG9uc2UuZGF0YS5kYXRhOwogICAgICAgICAgICAgICAgY29udGV4dC5jb21taXQoJ01VVF9BTExfVVNFUl9EQVRBJywgZGF0YSk7CiAgICAgICAgICAgICAgICBjb250ZXh0LmNvbW1pdCgnTVVUX1BBR0lOQVRJT04nLCBkYXRhLCB7CiAgICAgICAgICAgICAgICAgIHJvb3Q6IHRydWUKICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgIH0pLmNhdGNoKGZ1bmN0aW9uIChleGNlcHRpb24pIHsKICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKGV4Y2VwdGlvbik7CiAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICBjYXNlIDI6CiAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5zdG9wKCk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9LCBfY2FsbGVlMik7CiAgICB9KSk7CgogICAgZnVuY3Rpb24gQUNUX1NFQVJDSF9VU0VSUyhfeDMsIF94NCkgewogICAgICByZXR1cm4gX0FDVF9TRUFSQ0hfVVNFUlMuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICAgIH0KCiAgICByZXR1cm4gQUNUX1NFQVJDSF9VU0VSUzsKICB9KCksCiAgQUNUX0RFTEVURV9VU0VSOiBmdW5jdGlvbiAoKSB7CiAgICB2YXIgX0FDVF9ERUxFVEVfVVNFUiA9IF9hc3luY1RvR2VuZXJhdG9yKAogICAgLyojX19QVVJFX18qLwogICAgcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTMoY29udGV4dCwgaWQpIHsKICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUzJChfY29udGV4dDMpIHsKICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgc3dpdGNoIChfY29udGV4dDMucHJldiA9IF9jb250ZXh0My5uZXh0KSB7CiAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICBfY29udGV4dDMubmV4dCA9IDI7CiAgICAgICAgICAgICAgcmV0dXJuIGF4aW9zLmRlbGV0ZSgidXNlcnMvZGVsZXRlLyIuY29uY2F0KGlkKSkudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHsKICAgICAgICAgICAgICAgIGNvbnRleHQuY29tbWl0KCdNVVRfREVMRVRFX1BPUFVQX0NMT1NFJywgewogICAgICAgICAgICAgICAgICByb290OiB0cnVlCiAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgIGNvbnRleHQuZGlzcGF0Y2goJ0FDVF9BTExfVVNFUlMnLCB7CiAgICAgICAgICAgICAgICAgIGN1cnJlbnRfcGFnZTogMSwKICAgICAgICAgICAgICAgICAgbmV4dF9wYWdlOiAxCiAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICB9KS5jYXRjaChmdW5jdGlvbiAoZXhjZXB0aW9uKSB7CiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhleGNlcHRpb24pOwogICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgY2FzZSAyOgogICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDMuc3RvcCgpOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSwgX2NhbGxlZTMpOwogICAgfSkpOwoKICAgIGZ1bmN0aW9uIEFDVF9ERUxFVEVfVVNFUihfeDUsIF94NikgewogICAgICByZXR1cm4gX0FDVF9ERUxFVEVfVVNFUi5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogICAgfQoKICAgIHJldHVybiBBQ1RfREVMRVRFX1VTRVI7CiAgfSgpLAogIEFDVF9TVE9SRV9VU0VSOiBmdW5jdGlvbiAoKSB7CiAgICB2YXIgX0FDVF9TVE9SRV9VU0VSID0gX2FzeW5jVG9HZW5lcmF0b3IoCiAgICAvKiNfX1BVUkVfXyovCiAgICByZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlNChjb250ZXh0LCBwYXlsb2FkKSB7CiAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlNCQoX2NvbnRleHQ0KSB7CiAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQ0LnByZXYgPSBfY29udGV4dDQubmV4dCkgewogICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgX2NvbnRleHQ0Lm5leHQgPSAyOwogICAgICAgICAgICAgIHJldHVybiBheGlvcy5wb3N0KCJ1c2Vycy9zdG9yZSIsIHBheWxvYWQpLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgICAgICAgICAgICAgICB2YXIgZGF0YSA9IHJlc3BvbnNlLmRhdGE7CiAgICAgICAgICAgICAgICBjb250ZXh0LmNvbW1pdCgnTVVUX0VORF9MT0FESU5HJywgewogICAgICAgICAgICAgICAgICByb290OiB0cnVlCiAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgIGNvbnRleHQuY29tbWl0KCdNVVRfTk9USUZJQ0FUSU9OJywgZGF0YSwgewogICAgICAgICAgICAgICAgICByb290OiB0cnVlCiAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgIGNvbnRleHQuY29tbWl0KCdNVVRfQUxMX0RJQUxPR19DTE9TRScsIGRhdGEsIHsKICAgICAgICAgICAgICAgICAgcm9vdDogdHJ1ZQogICAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAgICAgaWYgKGRhdGEsIHN1Y2Nlc3MpIHsKICAgICAgICAgICAgICAgICAgcm91dGVyLnB1c2goewogICAgICAgICAgICAgICAgICAgIG5hbWU6ICd1c2VycycKICAgICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgfSkuY2F0Y2goZnVuY3Rpb24gKGV4Y2VwdGlvbikgewogICAgICAgICAgICAgICAgY29uc29sZS5sb2coZXhjZXB0aW9uKTsKICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgIGNhc2UgMjoKICAgICAgICAgICAgICBjb250ZXh0LmNvbW1pdCgnTVVUX1BBR0VfTE9BRElOR19FTkQnLCB7CiAgICAgICAgICAgICAgICByb290OiB0cnVlCiAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0NC5zdG9wKCk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9LCBfY2FsbGVlNCk7CiAgICB9KSk7CgogICAgZnVuY3Rpb24gQUNUX1NUT1JFX1VTRVIoX3g3LCBfeDgpIHsKICAgICAgcmV0dXJuIF9BQ1RfU1RPUkVfVVNFUi5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogICAgfQoKICAgIHJldHVybiBBQ1RfU1RPUkVfVVNFUjsKICB9KCksCiAgQUNUX1VQREFURV9VU0VSOiBmdW5jdGlvbiAoKSB7CiAgICB2YXIgX0FDVF9VUERBVEVfVVNFUiA9IF9hc3luY1RvR2VuZXJhdG9yKAogICAgLyojX19QVVJFX18qLwogICAgcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTUoY29udGV4dCwgcGF5bG9hZCkgewogICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTUkKF9jb250ZXh0NSkgewogICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0NS5wcmV2ID0gX2NvbnRleHQ1Lm5leHQpIHsKICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgIF9jb250ZXh0NS5uZXh0ID0gMjsKICAgICAgICAgICAgICByZXR1cm4gYXhpb3MucG9zdCgidXNlcnMvdXBkYXRlIiwgcGF5bG9hZCkudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHsKICAgICAgICAgICAgICAgIHZhciBkYXRhID0gcmVzcG9uc2UuZGF0YTsKICAgICAgICAgICAgICAgIGNvbnRleHQuY29tbWl0KCdNVVRfRU5EX0xPQURJTkcnLCB7CiAgICAgICAgICAgICAgICAgIHJvb3Q6IHRydWUKICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgY29udGV4dC5jb21taXQoJ01VVF9OT1RJRklDQVRJT04nLCBkYXRhLCB7CiAgICAgICAgICAgICAgICAgIHJvb3Q6IHRydWUKICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgY29udGV4dC5jb21taXQoJ01VVF9BTExfRElBTE9HX0NMT1NFJywgZGF0YSwgewogICAgICAgICAgICAgICAgICByb290OiB0cnVlCiAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgICBpZiAoZGF0YSwgc3VjY2VzcykgewogICAgICAgICAgICAgICAgICByb3V0ZXIucHVzaCh7CiAgICAgICAgICAgICAgICAgICAgbmFtZTogJ3VzZXJzJwogICAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICB9KS5jYXRjaChmdW5jdGlvbiAoZXhjZXB0aW9uKSB7CiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhleGNlcHRpb24pOwogICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgY2FzZSAyOgogICAgICAgICAgICAgIGNvbnRleHQuY29tbWl0KCdNVVRfUEFHRV9MT0FESU5HX0VORCcsIHsKICAgICAgICAgICAgICAgIHJvb3Q6IHRydWUKICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQ1LnN0b3AoKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0sIF9jYWxsZWU1KTsKICAgIH0pKTsKCiAgICBmdW5jdGlvbiBBQ1RfVVBEQVRFX1VTRVIoX3g5LCBfeDEwKSB7CiAgICAgIHJldHVybiBfQUNUX1VQREFURV9VU0VSLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgICB9CgogICAgcmV0dXJuIEFDVF9VUERBVEVfVVNFUjsKICB9KCksCiAgQUNUX0RFUEVOREVOQ1lfVVNFUjogZnVuY3Rpb24gKCkgewogICAgdmFyIF9BQ1RfREVQRU5ERU5DWV9VU0VSID0gX2FzeW5jVG9HZW5lcmF0b3IoCiAgICAvKiNfX1BVUkVfXyovCiAgICByZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlNihjb250ZXh0KSB7CiAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlNiQoX2NvbnRleHQ2KSB7CiAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQ2LnByZXYgPSBfY29udGV4dDYubmV4dCkgewogICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgX2NvbnRleHQ2Lm5leHQgPSAyOwogICAgICAgICAgICAgIHJldHVybiBheGlvcy5nZXQoInVzZXJzL2RlcGVuZGVuY3kvZGF0YSIpLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgICAgICAgICAgICAgICB2YXIgZGF0YSA9IHJlc3BvbnNlLmRhdGE7CiAgICAgICAgICAgICAgICBjb250ZXh0LmNvbW1pdCgnTVVUX1VTRVJfREVQRU5ERU5DWScsIGRhdGEpOwogICAgICAgICAgICAgIH0pLmNhdGNoKGZ1bmN0aW9uIChleGNlcHRpb24pIHsKICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKGV4Y2VwdGlvbik7CiAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICBjYXNlIDI6CiAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Ni5zdG9wKCk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9LCBfY2FsbGVlNik7CiAgICB9KSk7CgogICAgZnVuY3Rpb24gQUNUX0RFUEVOREVOQ1lfVVNFUihfeDExKSB7CiAgICAgIHJldHVybiBfQUNUX0RFUEVOREVOQ1lfVVNFUi5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogICAgfQoKICAgIHJldHVybiBBQ1RfREVQRU5ERU5DWV9VU0VSOwogIH0oKSwKICBBQ1RfU0lOR0xFX1VTRVI6IGZ1bmN0aW9uICgpIHsKICAgIHZhciBfQUNUX1NJTkdMRV9VU0VSID0gX2FzeW5jVG9HZW5lcmF0b3IoCiAgICAvKiNfX1BVUkVfXyovCiAgICByZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlNyhjb250ZXh0LCBpZCkgewogICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTckKF9jb250ZXh0NykgewogICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0Ny5wcmV2ID0gX2NvbnRleHQ3Lm5leHQpIHsKICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgIF9jb250ZXh0Ny5uZXh0ID0gMjsKICAgICAgICAgICAgICByZXR1cm4gYXhpb3MuZ2V0KCJ1c2Vycy8iLmNvbmNhdChpZCkpLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgICAgICAgICAgICAgICB2YXIgZGF0YSA9IHJlc3BvbnNlLmRhdGE7CiAgICAgICAgICAgICAgICBjb250ZXh0LmNvbW1pdCgnTVVUX1NJTkdMRV9VU0VSJywgZGF0YSk7CiAgICAgICAgICAgICAgfSkuY2F0Y2goZnVuY3Rpb24gKGV4Y2VwdGlvbikgewogICAgICAgICAgICAgICAgY29uc29sZS5sb2coZXhjZXB0aW9uKTsKICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgIGNhc2UgMjoKICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQ3LnN0b3AoKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0sIF9jYWxsZWU3KTsKICAgIH0pKTsKCiAgICBmdW5jdGlvbiBBQ1RfU0lOR0xFX1VTRVIoX3gxMiwgX3gxMykgewogICAgICByZXR1cm4gX0FDVF9TSU5HTEVfVVNFUi5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogICAgfQoKICAgIHJldHVybiBBQ1RfU0lOR0xFX1VTRVI7CiAgfSgpCn07CnZhciBjdXN0b21NdXRhdGlvbnMgPSB7CiAgTVVUX0FMTF9VU0VSX0RBVEE6IGZ1bmN0aW9uIE1VVF9BTExfVVNFUl9EQVRBKHN0YXRlLCBwYXlsb2FkKSB7CiAgICBzdGF0ZS51c2VycyA9IHBheWxvYWQuZGF0YTsKICB9LAogIE1VVF9VU0VSX0RFUEVOREVOQ1k6IGZ1bmN0aW9uIE1VVF9VU0VSX0RFUEVOREVOQ1koc3RhdGUsIHBheWxvYWQpIHsKICAgIHN0YXRlLmRlcGVuZGVuY3kgPSBwYXlsb2FkLmRhdGE7CiAgfSwKICBNVVRfU0lOR0xFX1VTRVI6IGZ1bmN0aW9uIE1VVF9TSU5HTEVfVVNFUihzdGF0ZSwgcGF5bG9hZCkgewogICAgc3RhdGUudXNlciA9IHBheWxvYWQuZGF0YTsKCiAgICBpZiAocGF5bG9hZC5kYXRhLnByb2ZpbGUpIHsKICAgICAgc3RhdGUudXNlci53ZWJzaXRlID0gcGF5bG9hZC5kYXRhLnByb2ZpbGUud2Vic2l0ZTsKICAgICAgc3RhdGUudXNlci5mYWNlYm9va19saW5rID0gcGF5bG9hZC5kYXRhLnByb2ZpbGUuZmFjZWJvb2tfbGluazsKICAgICAgc3RhdGUudXNlci5naXRodWJfbGluayA9IHBheWxvYWQuZGF0YS5wcm9maWxlLmdpdGh1Yl9saW5rOwogICAgICBkZWxldGUgc3RhdGUudXNlci5wcm9maWxlOwogICAgfQogIH0KfTsKZXhwb3J0IGRlZmF1bHQgewogIHN0YXRlOiBzdGF0ZSwKICBnZXR0ZXJzOiBjdXN0b21HZXR0ZXJzLAogIG11dGF0aW9uczogY3VzdG9tTXV0YXRpb25zLAogIGFjdGlvbnM6IGN1c3RvbUFjdGlvbnMKfTs="},{"version":3,"sources":["/opt/lampp/htdocs/adminDictionary/src/store/user.js"],"names":["axios","router","state","users","user","dependency","customGetters","GET_ALL_USER_DATA","GET_USER_COUNTRY_DEPENDENCY","map","country","id","name","GET_SINGLE_USER","customActions","ACT_ALL_USERS","context","payload","commit","root","get","next_page","then","response","data","catch","exception","console","log","ACT_SEARCH_USERS","searchKeyword","ACT_DELETE_USER","delete","dispatch","current_page","ACT_STORE_USER","post","success","push","ACT_UPDATE_USER","ACT_DEPENDENCY_USER","ACT_SINGLE_USER","customMutations","MUT_ALL_USER_DATA","MUT_USER_DEPENDENCY","MUT_SINGLE_USER","profile","website","facebook_link","github_link","getters","mutations","actions"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport router from '../router';\n\nconst state = {\n    users: [],\n    user: {},\n    dependency: []\n};\n\nconst customGetters = {\n    GET_ALL_USER_DATA: function(state) {\n        return state.users;\n    },\n    GET_USER_COUNTRY_DEPENDENCY: function(state) {\n        if(state.dependency['countries']) {\n            return state.dependency['countries'].map(country => {\n                return {\n                    'value': country.id,\n                    'text': country.name\n                };\n            });\n        }\n    },\n    GET_SINGLE_USER: function(state) {\n        return state.user;\n    }\n};\n\nconst customActions = {\n    ACT_ALL_USERS: async function (context, payload) {\n        context.commit('MUT_PAGE_LOADING_START', { root: true });\n        await axios.get(`users?page=${payload.next_page}`)\n            .then(response => {\n                let data = response.data.data;\n                context.commit('MUT_ALL_USER_DATA', data);\n                context.commit('MUT_PAGINATION', data, { root: true });\n                context.commit('MUT_PAGE_LOADING_END', { root: true });\n            })\n            .catch(exception => {\n                context.commit('MUT_PAGE_LOADING_END', { root: true });\n                console.log(exception);\n            });\n        context.commit('MUT_PAGE_LOADING_END', { root: true });\n    },\n    ACT_SEARCH_USERS: async function (context, payload) {\n        await axios.get(`users?page=${payload.next_page}&searchKeyword=${payload.searchKeyword}`)\n            .then(response => {\n                let data = response.data.data;\n                context.commit('MUT_ALL_USER_DATA', data);\n                context.commit('MUT_PAGINATION', data, { root: true });\n            })\n            .catch(exception => {\n                console.log(exception);\n            });\n    },\n    ACT_DELETE_USER: async function (context, id) {\n        await axios.delete(`users/delete/${id}`)\n            .then(response => {\n                context.commit('MUT_DELETE_POPUP_CLOSE', { root: true });\n                context.dispatch('ACT_ALL_USERS', {\n                    current_page: 1,\n                    next_page: 1\n                });\n            })\n            .catch(exception => {\n                console.log(exception);\n            });\n    },\n    ACT_STORE_USER: async function (context, payload) {\n        await axios.post(`users/store`, payload)\n            .then(response => {\n                let data = response.data;\n                context.commit('MUT_END_LOADING', { root: true });\n                context.commit('MUT_NOTIFICATION', data, { root: true });\n                context.commit('MUT_ALL_DIALOG_CLOSE', data, { root: true });\n                if(data,success) {\n                    router.push({name: 'users'});\n                }\n            })\n            .catch(exception => {\n                console.log(exception);\n            });\n        context.commit('MUT_PAGE_LOADING_END', { root: true });\n    },\n    ACT_UPDATE_USER: async function (context, payload) {\n        await axios.post(`users/update`, payload)\n            .then(response => {\n                let data = response.data;\n                context.commit('MUT_END_LOADING', { root: true });\n                context.commit('MUT_NOTIFICATION', data, { root: true });\n                context.commit('MUT_ALL_DIALOG_CLOSE', data, { root: true });\n                if(data,success) {\n                    router.push({name: 'users'});\n                }\n            })\n            .catch(exception => {\n                console.log(exception);\n            });\n        context.commit('MUT_PAGE_LOADING_END', { root: true });\n    },\n    ACT_DEPENDENCY_USER: async function (context) {\n        await axios.get(`users/dependency/data`)\n            .then(response => {\n                let data = response.data;\n                context.commit('MUT_USER_DEPENDENCY', data);\n            })\n            .catch(exception => {\n                console.log(exception);\n            });\n    },\n    ACT_SINGLE_USER: async function (context, id) {\n        await axios.get(`users/${id}`)\n            .then(response => {\n                let data = response.data;\n                context.commit('MUT_SINGLE_USER', data);\n            })\n            .catch(exception => {\n                console.log(exception);\n            });\n    },\n};\n\nconst customMutations = {\n    MUT_ALL_USER_DATA: function (state, payload) {\n        state.users = payload.data;\n    },\n    MUT_USER_DEPENDENCY: function (state, payload) {\n        state.dependency = payload.data;\n    },\n    MUT_SINGLE_USER: function (state, payload) {\n        state.user = payload.data;\n        if(payload.data.profile) {\n            state.user.website = payload.data.profile.website;\n            state.user.facebook_link = payload.data.profile.facebook_link;\n            state.user.github_link = payload.data.profile.github_link;\n            delete state.user.profile;\n        }\n    }\n};\n\nexport default {\n    state,\n    getters: customGetters,\n    mutations: customMutations,\n    actions: customActions\n}"]}]}