{"remainingRequest":"/opt/lampp/htdocs/adminDictionary/node_modules/vue-loader/lib/index.js??vue-loader-options!/opt/lampp/htdocs/adminDictionary/src/views/country/Index.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/opt/lampp/htdocs/adminDictionary/src/views/country/Index.vue","mtime":1580577933887},{"path":"/opt/lampp/htdocs/adminDictionary/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/opt/lampp/htdocs/adminDictionary/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/opt/lampp/htdocs/adminDictionary/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/opt/lampp/htdocs/adminDictionary/node_modules/vuetify-loader/lib/loader.js","mtime":1574476662000},{"path":"/opt/lampp/htdocs/adminDictionary/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/opt/lampp/htdocs/adminDictionary/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5lbC1kaWFsb2dfX2JvZHkgewogICAgcGFkZGluZy1ib3R0b206IDBweCAhaW1wb3J0YW50Owp9Cg=="},{"version":3,"sources":["Index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiJA;AACA;AACA","file":"Index.vue","sourceRoot":"src/views/country","sourcesContent":["<template>\n    <el-card class=\"box-card\">\n        <div slot=\"header\" class=\"clearfix\">\n            <span>Country List</span>\n            <v-btn style=\"float: right;\" small rounded tile outlined :color=\"color.addButton\" @click=\"createItem\">\n                <v-icon left>mdi-plus-circle-outline</v-icon> Create\n            </v-btn>\n        </div>\n        <el-table :data=\"countries\" style=\"width: 100%\" v-loading=\"$store.state.pageLoading\">\n            <el-table-column\n                    type=\"index\"\n                    width=\"50\">\n            </el-table-column>\n            <el-table-column\n                    label=\"Name\"\n                    prop=\"name\">\n            </el-table-column>\n            <el-table-column\n                    label=\"Code\"\n                    prop=\"code\">\n            </el-table-column>\n            <el-table-column\n                    label=\"Phone Code\"\n                    prop=\"phone_code\">\n            </el-table-column>\n            <el-table-column align=\"right\">\n                <template slot=\"header\" slot-scope=\"scope\">\n                    <el-input\n                            v-model=\"searchKeyword\"\n                            size=\"mini\"\n                            placeholder=\"Type to search\"></el-input>\n                </template>\n                <template slot-scope=\"scope\">\n                    <v-btn class=\"mx-2\" dark small :color=\"color.editButton\" @click=\"editItem(scope.row)\">\n                        <v-icon dark small>edit</v-icon>\n                    </v-btn>\n                    <v-btn class=\"mx-2\" dark small :color=\"color.deleteButton\" @click=\"deletePopup(scope.row)\">\n                        <v-icon dark small>delete</v-icon>\n                    </v-btn>\n                    <div v-if=\"$store.state.deleteDialog\">\n                        <DeletePopup :item=\"item\" action=\"ACT_DELETE_COUNTRY\" />\n                    </div>\n                </template>\n            </el-table-column>\n        </el-table>\n        <Pagination :action=\"searchKeyword ? 'ACT_SEARCH_COUNTRIES' : 'ACT_ALL_COUNTRIES'\" :query=\"searchKeyword\" />\n        <!--Form-->\n        <el-dialog\n                :title=\"dialogTitle\"\n                :visible.sync=\"$store.state.createDialogVisible\"\n                width=\"30%\">\n            <el-form :model=\"item\">\n                <el-form-item label=\"Name\" :label-width=\"formLabelWidth\">\n                    <el-input v-model=\"item.name\"></el-input>\n                </el-form-item>\n                <el-form-item label=\"Code\" :label-width=\"formLabelWidth\">\n                    <el-input v-model=\"item.code\"></el-input>\n                </el-form-item>\n                <el-form-item label=\"Phone Code\" :label-width=\"formLabelWidth\">\n                    <el-input v-model=\"item.phone_code\"></el-input>\n                </el-form-item>\n            </el-form>\n            <span slot=\"footer\" class=\"dialog-footer\">\n                    <el-button type=\"primary\" @click=\"submit\">Submit</el-button>\n                </span>\n        </el-dialog>\n        <!--Form-->\n        <v-snackbar v-model=\"$store.state.snackbar\" left>\n            {{ $store.state.notificationMessage }}\n        </v-snackbar>\n    </el-card>\n</template>\n\n<script>\n    import { mapGetters } from 'vuex';\n    import color from '../../plugins/colors';\n    import Pagination from \"../../components/default/Pagination\";\n    import DeletePopup from \"../../components/default/DeletePopup\";\n\n    export default {\n        name: \"Index\",\n        metaInfo: {\n            titleTemplate: 'Country | Dashboard | Faton',\n        },\n        components: {\n            Pagination,\n            DeletePopup,\n        },\n        data() {\n            return {\n                color: color,\n                searchKeyword: '',\n                item: {},\n                formLabelWidth: '90px',\n                dialogTitle: ''\n            }\n        },\n        created() {\n            this.$store.dispatch('ACT_ALL_COUNTRIES', {\n                current_page: 1,\n                next_page: 1\n            });\n        },\n        methods: {\n            deletePopup(row) {\n                this.item = row;\n                this.$store.state.deleteDialog = true;\n            },\n            createItem() {\n                this.dialogTitle = 'Create Country';\n                this.$store.state.createDialogVisible = true;\n            },\n            editItem(row) {\n                this.dialogTitle = 'Edit Country';\n                this.item = row;\n                this.$store.state.createDialogVisible = true;\n            },\n            submit(){\n                let action;\n                if(this.dialogTitle == 'Create Country') {\n                    action = 'ACT_STORE_COUNTRY';\n                } else {\n                    action = 'ACT_UPDATE_COUNTRY';\n                }\n                this.$store.dispatch(action, this.item);\n            }\n        },\n        computed: {\n            ...mapGetters({\n                countries : 'GET_ALL_COUNTRY_DATA'\n            })\n        },\n        watch: {\n            searchKeyword: function(val) {\n                this.$store.dispatch('ACT_SEARCH_COUNTRIES', {\n                    current_page: 1,\n                    next_page: 1,\n                    searchKeyword: val\n                });\n            }\n        }\n    }\n</script>\n\n<style>\n    .el-dialog__body {\n        padding-bottom: 0px !important;\n    }\n</style>"]}]}