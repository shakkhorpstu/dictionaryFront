{"remainingRequest":"/opt/lampp/htdocs/adminDictionary/node_modules/babel-loader/lib/index.js!/opt/lampp/htdocs/adminDictionary/src/store/word.js","dependencies":[{"path":"/opt/lampp/htdocs/adminDictionary/src/store/word.js","mtime":1580652643313},{"path":"/opt/lampp/htdocs/adminDictionary/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/opt/lampp/htdocs/adminDictionary/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/opt/lampp/htdocs/adminDictionary/src/store/word.js"],"names":["axios","router","state","words","word","dependency","customGetters","GET_ALL_WORD_DATA","GET_WORD_DEPENDENCY","map","chapter","id","name","GET_WORD_LANGUAGE_DEPENDENCY","language","GET_SINGLE_WORD","customActions","ACT_ALL_WORDS","context","payload","commit","root","get","next_page","then","response","data","catch","exception","console","log","ACT_SEARCH_WORDS","searchKeyword","ACT_DELETE_WORD","delete","dispatch","current_page","ACT_DEPENDENCY_WORD","ACT_STORE_WORD","post","success","push","ACT_SINGLE_WORD","ACT_UPDATE_WORD","customMutations","MUT_ALL_WORD_DATA","MUT_WORD_DEPENDENCY","MUT_SINGLE_WORD","getters","mutations","actions"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport router from '../router'\n\nconst state = {\n    words: [],\n    word: {},\n    dependency: []\n};\n\nconst customGetters = {\n    GET_ALL_WORD_DATA: function(state) {\n        return state.words;\n    },\n    GET_WORD_DEPENDENCY: function(state) {\n        if(state.dependency['chapters']) {\n            return state.dependency['chapters'].map(chapter => {\n                return {\n                    'value': chapter.id,\n                    'text': chapter.name\n                };\n            });\n        }\n    },\n    GET_WORD_LANGUAGE_DEPENDENCY: function(state) {\n        if(state.dependency['languages']) {\n            return state.dependency['languages'].map(language => {\n                return {\n                    'value': language.id,\n                    'text': language.name\n                };\n            });\n        }\n    },\n    GET_SINGLE_WORD: function(state) {\n        return state.word;\n    }\n};\n\nconst customActions = {\n    ACT_ALL_WORDS: async function (context, payload) {\n        context.commit('MUT_PAGE_LOADING_START', { root: true });\n        await axios.get(`words?page=${payload.next_page}`)\n            .then(response => {\n                let data = response.data.data;\n                context.commit('MUT_ALL_WORD_DATA', data);\n                context.commit('MUT_PAGINATION', data, { root: true });\n                context.commit('MUT_PAGE_LOADING_END', { root: true });\n            })\n            .catch(exception => {\n                context.commit('MUT_PAGE_LOADING_END', { root: true });\n                console.log(exception);\n            });\n        context.commit('MUT_PAGE_LOADING_END', { root: true });\n    },\n    ACT_SEARCH_WORDS: async function (context, payload) {\n        await axios.get(`words?page=${payload.next_page}&searchKeyword=${payload.searchKeyword}`)\n            .then(response => {\n                let data = response.data.data;\n                console.log(data);\n                context.commit('MUT_ALL_WORD_DATA', data);\n                context.commit('MUT_PAGINATION', data, { root: true });\n            })\n            .catch(exception => {\n                console.log(exception);\n            });\n    },\n    ACT_DELETE_WORD: async function (context, id) {\n        await axios.delete(`words/delete/${id}`)\n            .then(response => {\n                context.commit('MUT_DELETE_POPUP_CLOSE', { root: true });\n                context.dispatch('ACT_ALL_WORDS', {\n                    current_page: 1,\n                    next_page: 1\n                });\n            })\n            .catch(exception => {\n                console.log(exception);\n            });\n    },\n    ACT_DEPENDENCY_WORD: async function (context) {\n        await axios.get(`words/dependency/data`)\n            .then(response => {\n                let data = response.data;\n                context.commit('MUT_WORD_DEPENDENCY', data);\n            })\n            .catch(exception => {\n                console.log(exception);\n            });\n    },\n    ACT_STORE_WORD: async function (context, payload) {\n        await axios.post(`words/store`, payload)\n            .then(response => {\n                let data = response.data;\n                context.commit('MUT_END_LOADING', { root: true });\n                context.commit('MUT_NOTIFICATION', data, { root: true });\n                if(data.success) {\n                    router.push({name: 'words'});\n                }\n            })\n            .catch(exception => {\n                console.log(exception);\n            });\n        context.commit('MUT_PAGE_LOADING_END', { root: true });\n    },\n    ACT_SINGLE_WORD: async function (context, id) {\n        await axios.get(`words/${id}`)\n            .then(response => {\n                let data = response.data;\n                context.commit('MUT_SINGLE_WORD', data);\n            })\n            .catch(exception => {\n                console.log(exception);\n            });\n    },\n    ACT_UPDATE_WORD: async function (context, payload) {\n        await axios.post(`words/update`, payload)\n            .then(response => {\n                let data = response.data;\n                context.commit('MUT_END_LOADING', { root: true });\n                context.commit('MUT_NOTIFICATION', data, { root: true });\n                if(data.success) {\n                    router.push({name: 'words'});\n                }\n            })\n            .catch(exception => {\n                console.log(exception);\n            });\n        context.commit('MUT_PAGE_LOADING_END', { root: true });\n    },\n};\n\nconst customMutations = {\n    MUT_ALL_WORD_DATA: function (state, payload) {\n        state.words = payload.data;\n    },\n    MUT_WORD_DEPENDENCY: function (state, payload) {\n        state.dependency = payload.data;\n    },\n    MUT_SINGLE_WORD: function (state, payload) {\n        state.word = payload.data;\n    }\n};\n\nexport default {\n    state,\n    getters: customGetters,\n    mutations: customMutations,\n    actions: customActions\n}"]}]}