{"remainingRequest":"/opt/lampp/htdocs/adminDictionary/node_modules/babel-loader/lib/index.js!/opt/lampp/htdocs/adminDictionary/src/store/page.js","dependencies":[{"path":"/opt/lampp/htdocs/adminDictionary/src/store/page.js","mtime":1581436526204},{"path":"/opt/lampp/htdocs/adminDictionary/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/opt/lampp/htdocs/adminDictionary/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/opt/lampp/htdocs/adminDictionary/src/store/page.js"],"names":["axios","router","state","pages","page","dependency","customGetters","GET_ALL_PAGE_DATA","GET_SINGLE_PAGE","GET_PAGE_LANGUAGE_DEPENDENCY","map","language","id","name","customActions","ACT_ALL_PAGES","context","payload","commit","root","get","next_page","then","response","data","catch","exception","console","log","ACT_SEARCH_PAGES","searchKeyword","ACT_DELETE_PAGE","delete","dispatch","current_page","ACT_DEPENDENCY_PAGE","ACT_STORE_PAGE","post","success","push","ACT_SINGLE_PAGE","ACT_UPDATE_PAGE","singlePage","hasImage","image","imgResponse","e","customMutations","MUT_ALL_PAGE_DATA","MUT_SINGLE_PAGE","MUT_PAGE_DEPENDENCY","getters","mutations","actions"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AAEA,IAAMC,KAAK,GAAG;AACVC,EAAAA,KAAK,EAAE,EADG;AAEVC,EAAAA,IAAI,EAAE,EAFI;AAGVC,EAAAA,UAAU,EAAE;AAHF,CAAd;AAMA,IAAMC,aAAa,GAAG;AAClBC,EAAAA,iBAAiB,EAAE,2BAASL,KAAT,EAAgB;AAC/B,WAAOA,KAAK,CAACC,KAAb;AACH,GAHiB;AAIlBK,EAAAA,eAAe,EAAE,yBAASN,KAAT,EAAgB;AAC7B,WAAOA,KAAK,CAACE,IAAb;AACH,GANiB;AAOlBK,EAAAA,4BAA4B,EAAE,sCAASP,KAAT,EAAgB;AAC1C,QAAGA,KAAK,CAACG,UAAN,CAAiB,WAAjB,CAAH,EAAkC;AAC9B,aAAOH,KAAK,CAACG,UAAN,CAAiB,WAAjB,EAA8BK,GAA9B,CAAkC,UAAAC,QAAQ,EAAI;AACjD,eAAO;AACH,mBAASA,QAAQ,CAACC,EADf;AAEH,kBAAQD,QAAQ,CAACE;AAFd,SAAP;AAIH,OALM,CAAP;AAMH;AACJ;AAhBiB,CAAtB;AAmBA,IAAMC,aAAa,GAAG;AAClBC,EAAAA,aAAa;AAAA;AAAA;AAAA,4BAAE,iBAAgBC,OAAhB,EAAyBC,OAAzB;AAAA;AAAA;AAAA;AAAA;AACXD,cAAAA,OAAO,CAACE,MAAR,CAAe,wBAAf,EAAyC;AAAEC,gBAAAA,IAAI,EAAE;AAAR,eAAzC;AADW;AAAA,qBAELnB,KAAK,CAACoB,GAAN,sBAAwBH,OAAO,CAACI,SAAhC,GACDC,IADC,CACI,UAAAC,QAAQ,EAAI;AACd,oBAAIC,IAAI,GAAGD,QAAQ,CAACC,IAAT,CAAcA,IAAzB;AACAR,gBAAAA,OAAO,CAACE,MAAR,CAAe,mBAAf,EAAoCM,IAApC;AACAR,gBAAAA,OAAO,CAACE,MAAR,CAAe,gBAAf,EAAiCM,IAAjC,EAAuC;AAAEL,kBAAAA,IAAI,EAAE;AAAR,iBAAvC;AACAH,gBAAAA,OAAO,CAACE,MAAR,CAAe,sBAAf,EAAuC;AAAEC,kBAAAA,IAAI,EAAE;AAAR,iBAAvC;AACH,eANC,EAODM,KAPC,CAOK,UAAAC,SAAS,EAAI;AAChBV,gBAAAA,OAAO,CAACE,MAAR,CAAe,sBAAf,EAAuC;AAAEC,kBAAAA,IAAI,EAAE;AAAR,iBAAvC;AACAQ,gBAAAA,OAAO,CAACC,GAAR,CAAYF,SAAZ;AACH,eAVC,CAFK;;AAAA;AAaXV,cAAAA,OAAO,CAACE,MAAR,CAAe,sBAAf,EAAuC;AAAEC,gBAAAA,IAAI,EAAE;AAAR,eAAvC;;AAbW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA,KADK;AAgBlBU,EAAAA,gBAAgB;AAAA;AAAA;AAAA,4BAAE,kBAAgBb,OAAhB,EAAyBC,OAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACRjB,KAAK,CAACoB,GAAN,sBAAwBH,OAAO,CAACI,SAAhC,4BAA2DJ,OAAO,CAACa,aAAnE,GACDR,IADC,CACI,UAAAC,QAAQ,EAAI;AACd,oBAAIC,IAAI,GAAGD,QAAQ,CAACC,IAAT,CAAcA,IAAzB;AACAR,gBAAAA,OAAO,CAACE,MAAR,CAAe,mBAAf,EAAoCM,IAApC;AACAR,gBAAAA,OAAO,CAACE,MAAR,CAAe,gBAAf,EAAiCM,IAAjC,EAAuC;AAAEL,kBAAAA,IAAI,EAAE;AAAR,iBAAvC;AACH,eALC,EAMDM,KANC,CAMK,UAAAC,SAAS,EAAI;AAChBC,gBAAAA,OAAO,CAACC,GAAR,CAAYF,SAAZ;AACH,eARC,CADQ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA,KAhBE;AA2BlBK,EAAAA,eAAe;AAAA;AAAA;AAAA,4BAAE,kBAAgBf,OAAhB,EAAyBJ,EAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACPZ,KAAK,CAACgC,MAAN,wBAA6BpB,EAA7B,GACDU,IADC,CACI,UAAAC,QAAQ,EAAI;AACdP,gBAAAA,OAAO,CAACE,MAAR,CAAe,wBAAf,EAAyC;AAAEC,kBAAAA,IAAI,EAAE;AAAR,iBAAzC;AACAH,gBAAAA,OAAO,CAACiB,QAAR,CAAiB,eAAjB,EAAkC;AAC9BC,kBAAAA,YAAY,EAAE,CADgB;AAE9Bb,kBAAAA,SAAS,EAAE;AAFmB,iBAAlC;AAIH,eAPC,EAQDI,KARC,CAQK,UAAAC,SAAS,EAAI;AAChBC,gBAAAA,OAAO,CAACC,GAAR,CAAYF,SAAZ;AACH,eAVC,CADO;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA,KA3BG;AAwClBS,EAAAA,mBAAmB;AAAA;AAAA;AAAA,4BAAE,kBAAgBnB,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACXhB,KAAK,CAACoB,GAAN,0BACDE,IADC,CACI,UAAAC,QAAQ,EAAI;AACd,oBAAIC,IAAI,GAAGD,QAAQ,CAACC,IAApB;AACAR,gBAAAA,OAAO,CAACE,MAAR,CAAe,qBAAf,EAAsCM,IAAtC;AACH,eAJC,EAKDC,KALC,CAKK,UAAAC,SAAS,EAAI;AAChBC,gBAAAA,OAAO,CAACC,GAAR,CAAYF,SAAZ;AACH,eAPC,CADW;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA,KAxCD;AAkDlBU,EAAAA,cAAc;AAAA;AAAA;AAAA,4BAAE,kBAAgBpB,OAAhB,EAAyBC,OAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACNjB,KAAK,CAACqC,IAAN,gBAA0BpB,OAA1B,EACDK,IADC,CACI,UAAAC,QAAQ,EAAI;AACd,oBAAIC,IAAI,GAAGD,QAAQ,CAACC,IAApB;AACAR,gBAAAA,OAAO,CAACE,MAAR,CAAe,iBAAf,EAAkC;AAAEC,kBAAAA,IAAI,EAAE;AAAR,iBAAlC;AACAH,gBAAAA,OAAO,CAACE,MAAR,CAAe,kBAAf,EAAmCM,IAAnC,EAAyC;AAAEL,kBAAAA,IAAI,EAAE;AAAR,iBAAzC;;AACA,oBAAGK,IAAI,CAACc,OAAR,EAAiB;AACbrC,kBAAAA,MAAM,CAACsC,IAAP,CAAY;AAAC1B,oBAAAA,IAAI,EAAE;AAAP,mBAAZ;AACH;AACJ,eARC,EASDY,KATC,CASK,UAAAC,SAAS,EAAI;AAChBC,gBAAAA,OAAO,CAACC,GAAR,CAAYF,SAAZ;AACH,eAXC,CADM;;AAAA;AAaZV,cAAAA,OAAO,CAACE,MAAR,CAAe,sBAAf,EAAuC;AAAEC,gBAAAA,IAAI,EAAE;AAAR,eAAvC;;AAbY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA,KAlDI;AAiElBqB,EAAAA,eAAe;AAAA;AAAA;AAAA,4BAAE,kBAAgBxB,OAAhB,EAAyBJ,EAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACPZ,KAAK,CAACoB,GAAN,iBAAmBR,EAAnB,GACDU,IADC,CACI,UAAAC,QAAQ,EAAI;AACd,oBAAIC,IAAI,GAAGD,QAAQ,CAACC,IAApB;AACAR,gBAAAA,OAAO,CAACE,MAAR,CAAe,iBAAf,EAAkCM,IAAlC;AACH,eAJC,EAKDC,KALC,CAKK,UAAAC,SAAS,EAAI;AAChBC,gBAAAA,OAAO,CAACC,GAAR,CAAYF,SAAZ;AACH,eAPC,CADO;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA,KAjEG;AA2ElBe,EAAAA,eAAe;AAAA;AAAA;AAAA,4BAAE,kBAAgBzB,OAAhB,EAAyBC,OAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACPjB,KAAK,CAACqC,IAAN,iBAA2BpB,OAAO,CAACyB,UAAnC,EACDpB,IADC,CACI,UAAAC,QAAQ,EAAI;AACd,oBAAIC,IAAI,GAAGD,QAAQ,CAACC,IAApB;;AACA,oBAAGA,IAAI,CAACc,OAAR,EAAiB;AACb,sBAAGrB,OAAO,CAAC0B,QAAX,EAAqB;AACjB3C,oBAAAA,KAAK,CAACqC,IAAN,8BAAiCpB,OAAO,CAACyB,UAAR,CAAmB9B,EAApD,GAA0DK,OAAO,CAAC2B,KAAlE,EACKtB,IADL,CACU,UAAAuB,WAAW,EAAI;AACjBlB,sBAAAA,OAAO,CAACC,GAAR,CAAYiB,WAAW,CAACrB,IAAxB;AACH,qBAHL,EAIKC,KAJL,CAIW,UAAAqB,CAAC,EAAI;AACRnB,sBAAAA,OAAO,CAACC,GAAR,CAAYkB,CAAZ;AACH,qBANL;AAOH;AACJ;;AAED9B,gBAAAA,OAAO,CAACE,MAAR,CAAe,iBAAf,EAAkC;AAAEC,kBAAAA,IAAI,EAAE;AAAR,iBAAlC;AACAH,gBAAAA,OAAO,CAACE,MAAR,CAAe,kBAAf,EAAmCM,IAAnC,EAAyC;AAAEL,kBAAAA,IAAI,EAAE;AAAR,iBAAzC;;AACA,oBAAGK,IAAI,CAACc,OAAR,EAAiB;AACbrC,kBAAAA,MAAM,CAACsC,IAAP,CAAY;AAAC1B,oBAAAA,IAAI,EAAE;AAAP,mBAAZ;AACH;AACJ,eApBC,EAqBDY,KArBC,CAqBK,UAAAC,SAAS,EAAI;AAChBC,gBAAAA,OAAO,CAACC,GAAR,CAAYF,SAAZ;AACH,eAvBC,CADO;;AAAA;AAyBbV,cAAAA,OAAO,CAACE,MAAR,CAAe,sBAAf,EAAuC;AAAEC,gBAAAA,IAAI,EAAE;AAAR,eAAvC;;AAzBa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA;AA3EG,CAAtB;AAwGA,IAAM4B,eAAe,GAAG;AACpBC,EAAAA,iBAAiB,EAAE,2BAAU9C,KAAV,EAAiBe,OAAjB,EAA0B;AACzCf,IAAAA,KAAK,CAACC,KAAN,GAAcc,OAAO,CAACO,IAAtB;AACH,GAHmB;AAIpByB,EAAAA,eAAe,EAAE,yBAAU/C,KAAV,EAAiBe,OAAjB,EAA0B;AACvCf,IAAAA,KAAK,CAACE,IAAN,GAAaa,OAAO,CAACO,IAArB;AACH,GANmB;AAOpB0B,EAAAA,mBAAmB,EAAE,6BAAUhD,KAAV,EAAiBe,OAAjB,EAA0B;AAC3Cf,IAAAA,KAAK,CAACG,UAAN,GAAmBY,OAAO,CAACO,IAA3B;AACH;AATmB,CAAxB;AAYA,eAAe;AACXtB,EAAAA,KAAK,EAALA,KADW;AAEXiD,EAAAA,OAAO,EAAE7C,aAFE;AAGX8C,EAAAA,SAAS,EAAEL,eAHA;AAIXM,EAAAA,OAAO,EAAEvC;AAJE,CAAf","sourcesContent":["import axios from 'axios';\nimport router from '../router'\n\nconst state = {\n    pages: [],\n    page: {},\n    dependency: []\n};\n\nconst customGetters = {\n    GET_ALL_PAGE_DATA: function(state) {\n        return state.pages;\n    },\n    GET_SINGLE_PAGE: function(state) {\n        return state.page;\n    },\n    GET_PAGE_LANGUAGE_DEPENDENCY: function(state) {\n        if(state.dependency['languages']) {\n            return state.dependency['languages'].map(language => {\n                return {\n                    'value': language.id,\n                    'text': language.name\n                };\n            });\n        }\n    },\n};\n\nconst customActions = {\n    ACT_ALL_PAGES: async function (context, payload) {\n        context.commit('MUT_PAGE_LOADING_START', { root: true });\n        await axios.get(`pages?page=${payload.next_page}`)\n            .then(response => {\n                let data = response.data.data;\n                context.commit('MUT_ALL_PAGE_DATA', data);\n                context.commit('MUT_PAGINATION', data, { root: true });\n                context.commit('MUT_PAGE_LOADING_END', { root: true });\n            })\n            .catch(exception => {\n                context.commit('MUT_PAGE_LOADING_END', { root: true });\n                console.log(exception);\n            });\n        context.commit('MUT_PAGE_LOADING_END', { root: true });\n    },\n    ACT_SEARCH_PAGES: async function (context, payload) {\n        await axios.get(`pages?page=${payload.next_page}&searchKeyword=${payload.searchKeyword}`)\n            .then(response => {\n                let data = response.data.data;\n                context.commit('MUT_ALL_PAGE_DATA', data);\n                context.commit('MUT_PAGINATION', data, { root: true });\n            })\n            .catch(exception => {\n                console.log(exception);\n            });\n    },\n    ACT_DELETE_PAGE: async function (context, id) {\n        await axios.delete(`pages/delete/${id}`)\n            .then(response => {\n                context.commit('MUT_DELETE_POPUP_CLOSE', { root: true });\n                context.dispatch('ACT_ALL_PAGES', {\n                    current_page: 1,\n                    next_page: 1\n                });\n            })\n            .catch(exception => {\n                console.log(exception);\n            });\n    },\n    ACT_DEPENDENCY_PAGE: async function (context) {\n        await axios.get(`pages/dependency/data`)\n            .then(response => {\n                let data = response.data;\n                context.commit('MUT_PAGE_DEPENDENCY', data);\n            })\n            .catch(exception => {\n                console.log(exception);\n            });\n    },\n    ACT_STORE_PAGE: async function (context, payload) {\n        await axios.post(`pages/store`, payload)\n            .then(response => {\n                let data = response.data;\n                context.commit('MUT_END_LOADING', { root: true });\n                context.commit('MUT_NOTIFICATION', data, { root: true });\n                if(data.success) {\n                    router.push({name: 'pages'});\n                }\n            })\n            .catch(exception => {\n                console.log(exception);\n            });\n        context.commit('MUT_PAGE_LOADING_END', { root: true });\n    },\n    ACT_SINGLE_PAGE: async function (context, id) {\n        await axios.get(`pages/${id}`)\n            .then(response => {\n                let data = response.data;\n                context.commit('MUT_SINGLE_PAGE', data);\n            })\n            .catch(exception => {\n                console.log(exception);\n            });\n    },\n    ACT_UPDATE_PAGE: async function (context, payload) {\n        await axios.post(`pages/update`, payload.singlePage)\n            .then(response => {\n                let data = response.data;\n                if(data.success) {\n                    if(payload.hasImage) {\n                        axios.post(`pages/update/image/${payload.singlePage.id}`, payload.image)\n                            .then(imgResponse => {\n                                console.log(imgResponse.data);\n                            })\n                            .catch(e => {\n                                console.log(e);\n                            });\n                    }\n                }\n\n                context.commit('MUT_END_LOADING', { root: true });\n                context.commit('MUT_NOTIFICATION', data, { root: true });\n                if(data.success) {\n                    router.push({name: 'pages'});\n                }\n            })\n            .catch(exception => {\n                console.log(exception);\n            });\n        context.commit('MUT_PAGE_LOADING_END', { root: true });\n    },\n};\n\nconst customMutations = {\n    MUT_ALL_PAGE_DATA: function (state, payload) {\n        state.pages = payload.data;\n    },\n    MUT_SINGLE_PAGE: function (state, payload) {\n        state.page = payload.data;\n    },\n    MUT_PAGE_DEPENDENCY: function (state, payload) {\n        state.dependency = payload.data;\n    },\n};\n\nexport default {\n    state,\n    getters: customGetters,\n    mutations: customMutations,\n    actions: customActions\n}"]}]}