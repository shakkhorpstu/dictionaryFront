{"remainingRequest":"/opt/lampp/htdocs/adminDictionary/node_modules/babel-loader/lib/index.js!/opt/lampp/htdocs/adminDictionary/src/store/admin.js","dependencies":[{"path":"/opt/lampp/htdocs/adminDictionary/src/store/admin.js","mtime":1580652642941},{"path":"/opt/lampp/htdocs/adminDictionary/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/opt/lampp/htdocs/adminDictionary/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/opt/lampp/htdocs/adminDictionary/src/store/admin.js"],"names":["axios","state","admins","dependency","customGetters","GET_ALL_ADMIN_DATA","GET_ADMIN_ROLE_DEPENDENCY","map","role","id","title","customActions","ACT_ALL_ADMINS","context","payload","commit","root","get","next_page","then","response","data","catch","exception","console","log","ACT_SEARCH_ADMINS","searchKeyword","ACT_DELETE_ADMIN","delete","dispatch","current_page","ACT_STORE_ADMIN","post","success","ACT_UPDATE_ADMIN","ACT_DEPENDENCY_ADMIN","customMutations","MUT_ALL_ADMIN_DATA","MUT_ADMIN_DEPENDENCY","getters","mutations","actions"],"mappings":"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","sourcesContent":["import axios from 'axios';\n\nconst state = {\n    admins: [],\n    dependency: [],\n};\n\nconst customGetters = {\n    GET_ALL_ADMIN_DATA: function(state) {\n        return state.admins;\n    },\n    GET_ADMIN_ROLE_DEPENDENCY: function(state) {\n        if(state.dependency['roles']) {\n            return state.dependency['roles'].map(role => {\n                return {\n                    'value': role.id,\n                    'text': role.title\n                };\n            });\n        }\n    },\n};\n\nconst customActions = {\n    ACT_ALL_ADMINS: async function (context, payload) {\n        context.commit('MUT_PAGE_LOADING_START', { root: true });\n        await axios.get(`admins?page=${payload.next_page}`)\n            .then(response => {\n                let data = response.data.data;\n                context.commit('MUT_ALL_ADMIN_DATA', data);\n                context.commit('MUT_PAGINATION', data, { root: true });\n                context.commit('MUT_PAGE_LOADING_END', { root: true });\n            })\n            .catch(exception => {\n                context.commit('MUT_PAGE_LOADING_END', { root: true });\n                console.log(exception);\n            });\n        context.commit('MUT_PAGE_LOADING_END', { root: true });\n    },\n    ACT_SEARCH_ADMINS: async function (context, payload) {\n        await axios.get(`admins?page=${payload.next_page}&searchKeyword=${payload.searchKeyword}`)\n            .then(response => {\n                let data = response.data.data;\n                context.commit('MUT_ALL_ADMIN_DATA', data);\n                context.commit('MUT_PAGINATION', data, { root: true });\n            })\n            .catch(exception => {\n                console.log(exception);\n            });\n    },\n    ACT_DELETE_ADMIN: async function (context, id) {\n        await axios.delete(`admins/delete/${id}`)\n            .then(response => {\n                context.commit('MUT_DELETE_POPUP_CLOSE', { root: true });\n                context.dispatch('ACT_ALL_ADMINS', {\n                    current_page: 1,\n                    next_page: 1\n                });\n            })\n            .catch(exception => {\n                console.log(exception);\n            });\n    },\n    ACT_STORE_ADMIN: async function (context, payload) {\n        await axios.post(`admins/store`, payload)\n            .then(response => {\n                let data = response.data;\n                context.commit('MUT_END_LOADING', { root: true });\n                context.commit('MUT_NOTIFICATION', data, { root: true });\n                if(data.success) {\n                    context.commit('MUT_ALL_DIALOG_CLOSE', data, { root: true });\n                    context.dispatch('ACT_ALL_ADMINS', {\n                        current_page: 1,\n                        next_page: 1\n                    });\n                }\n            })\n            .catch(exception => {\n                console.log(exception);\n            });\n        context.commit('MUT_PAGE_LOADING_END', { root: true });\n    },\n    ACT_UPDATE_ADMIN: async function (context, payload) {\n        await axios.post(`admins/update`, payload)\n            .then(response => {\n                let data = response.data;\n                context.commit('MUT_END_LOADING', { root: true });\n                context.commit('MUT_NOTIFICATION', data, { root: true });\n                if(data.success) {\n                    context.commit('MUT_ALL_DIALOG_CLOSE', data, { root: true });\n                    context.dispatch('ACT_ALL_ADMINS', {\n                        current_page: 1,\n                        next_page: 1\n                    });\n                }\n            })\n            .catch(exception => {\n                console.log(exception);\n            });\n        context.commit('MUT_PAGE_LOADING_END', { root: true });\n    },\n    ACT_DEPENDENCY_ADMIN: async function (context) {\n        await axios.get(`admins/dependency/data`)\n            .then(response => {\n                let data = response.data;\n                context.commit('MUT_ADMIN_DEPENDENCY', data);\n            })\n            .catch(exception => {\n                console.log(exception);\n            });\n    },\n};\n\nconst customMutations = {\n    MUT_ALL_ADMIN_DATA: function (state, payload) {\n        state.admins = payload.data;\n    },\n    MUT_ADMIN_DEPENDENCY: function (state, payload) {\n        state.dependency = payload.data;\n    },\n};\n\nexport default {\n    state,\n    getters: customGetters,\n    mutations: customMutations,\n    actions: customActions\n}"]}]}