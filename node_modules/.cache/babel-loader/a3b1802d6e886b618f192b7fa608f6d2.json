{"remainingRequest":"/opt/lampp/htdocs/adminDictionary/node_modules/babel-loader/lib/index.js!/opt/lampp/htdocs/adminDictionary/src/store/language.js","dependencies":[{"path":"/opt/lampp/htdocs/adminDictionary/src/store/language.js","mtime":1580652643101},{"path":"/opt/lampp/htdocs/adminDictionary/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/opt/lampp/htdocs/adminDictionary/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0IjsKaW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiL29wdC9sYW1wcC9odGRvY3MvYWRtaW5EaWN0aW9uYXJ5L25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yIjsKaW1wb3J0IGF4aW9zIGZyb20gJ2F4aW9zJzsKdmFyIHN0YXRlID0gewogIGxhbmd1YWdlczogW10KfTsKdmFyIGN1c3RvbUdldHRlcnMgPSB7CiAgR0VUX0FMTF9MQU5HVUFHRV9EQVRBOiBmdW5jdGlvbiBHRVRfQUxMX0xBTkdVQUdFX0RBVEEoc3RhdGUpIHsKICAgIHJldHVybiBzdGF0ZS5sYW5ndWFnZXM7CiAgfQp9Owp2YXIgY3VzdG9tQWN0aW9ucyA9IHsKICBBQ1RfQUxMX0xBTkdVQUdFUzogZnVuY3Rpb24gKCkgewogICAgdmFyIF9BQ1RfQUxMX0xBTkdVQUdFUyA9IF9hc3luY1RvR2VuZXJhdG9yKAogICAgLyojX19QVVJFX18qLwogICAgcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZShjb250ZXh0LCBwYXlsb2FkKSB7CiAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICBjb250ZXh0LmNvbW1pdCgnTVVUX1BBR0VfTE9BRElOR19TVEFSVCcsIHsKICAgICAgICAgICAgICAgIHJvb3Q6IHRydWUKICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMzsKICAgICAgICAgICAgICByZXR1cm4gYXhpb3MuZ2V0KCJsYW5ndWFnZXM/cGFnZT0iLmNvbmNhdChwYXlsb2FkLm5leHRfcGFnZSkpLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgICAgICAgICAgICAgICB2YXIgZGF0YSA9IHJlc3BvbnNlLmRhdGEuZGF0YTsKICAgICAgICAgICAgICAgIGNvbnRleHQuY29tbWl0KCdNVVRfQUxMX0xBTkdVQUdFX0RBVEEnLCBkYXRhKTsKICAgICAgICAgICAgICAgIGNvbnRleHQuY29tbWl0KCdNVVRfUEFHSU5BVElPTicsIGRhdGEsIHsKICAgICAgICAgICAgICAgICAgcm9vdDogdHJ1ZQogICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICBjb250ZXh0LmNvbW1pdCgnTVVUX1BBR0VfTE9BRElOR19FTkQnLCB7CiAgICAgICAgICAgICAgICAgIHJvb3Q6IHRydWUKICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgIH0pLmNhdGNoKGZ1bmN0aW9uIChleGNlcHRpb24pIHsKICAgICAgICAgICAgICAgIGNvbnRleHQuY29tbWl0KCdNVVRfUEFHRV9MT0FESU5HX0VORCcsIHsKICAgICAgICAgICAgICAgICAgcm9vdDogdHJ1ZQogICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhleGNlcHRpb24pOwogICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgY2FzZSAzOgogICAgICAgICAgICAgIGNvbnRleHQuY29tbWl0KCdNVVRfUEFHRV9MT0FESU5HX0VORCcsIHsKICAgICAgICAgICAgICAgIHJvb3Q6IHRydWUKICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgIGNhc2UgNDoKICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSwgX2NhbGxlZSk7CiAgICB9KSk7CgogICAgZnVuY3Rpb24gQUNUX0FMTF9MQU5HVUFHRVMoX3gsIF94MikgewogICAgICByZXR1cm4gX0FDVF9BTExfTEFOR1VBR0VTLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgICB9CgogICAgcmV0dXJuIEFDVF9BTExfTEFOR1VBR0VTOwogIH0oKSwKICBBQ1RfU0VBUkNIX0xBTkdVQUdFUzogZnVuY3Rpb24gKCkgewogICAgdmFyIF9BQ1RfU0VBUkNIX0xBTkdVQUdFUyA9IF9hc3luY1RvR2VuZXJhdG9yKAogICAgLyojX19QVVJFX18qLwogICAgcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTIoY29udGV4dCwgcGF5bG9hZCkgewogICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTIkKF9jb250ZXh0MikgewogICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0Mi5wcmV2ID0gX2NvbnRleHQyLm5leHQpIHsKICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gMjsKICAgICAgICAgICAgICByZXR1cm4gYXhpb3MuZ2V0KCJsYW5ndWFnZXM/cGFnZT0iLmNvbmNhdChwYXlsb2FkLm5leHRfcGFnZSwgIiZzZWFyY2hLZXl3b3JkPSIpLmNvbmNhdChwYXlsb2FkLnNlYXJjaEtleXdvcmQpKS50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkgewogICAgICAgICAgICAgICAgdmFyIGRhdGEgPSByZXNwb25zZS5kYXRhLmRhdGE7CiAgICAgICAgICAgICAgICBjb250ZXh0LmNvbW1pdCgnTVVUX0FMTF9MQU5HVUFHRV9EQVRBJywgZGF0YSk7CiAgICAgICAgICAgICAgICBjb250ZXh0LmNvbW1pdCgnTVVUX1BBR0lOQVRJT04nLCBkYXRhLCB7CiAgICAgICAgICAgICAgICAgIHJvb3Q6IHRydWUKICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgIH0pLmNhdGNoKGZ1bmN0aW9uIChleGNlcHRpb24pIHsKICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKGV4Y2VwdGlvbik7CiAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICBjYXNlIDI6CiAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5zdG9wKCk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9LCBfY2FsbGVlMik7CiAgICB9KSk7CgogICAgZnVuY3Rpb24gQUNUX1NFQVJDSF9MQU5HVUFHRVMoX3gzLCBfeDQpIHsKICAgICAgcmV0dXJuIF9BQ1RfU0VBUkNIX0xBTkdVQUdFUy5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogICAgfQoKICAgIHJldHVybiBBQ1RfU0VBUkNIX0xBTkdVQUdFUzsKICB9KCksCiAgQUNUX0RFTEVURV9MQU5HVUFHRTogZnVuY3Rpb24gKCkgewogICAgdmFyIF9BQ1RfREVMRVRFX0xBTkdVQUdFID0gX2FzeW5jVG9HZW5lcmF0b3IoCiAgICAvKiNfX1BVUkVfXyovCiAgICByZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMyhjb250ZXh0LCBpZCkgewogICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTMkKF9jb250ZXh0MykgewogICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0My5wcmV2ID0gX2NvbnRleHQzLm5leHQpIHsKICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgIF9jb250ZXh0My5uZXh0ID0gMjsKICAgICAgICAgICAgICByZXR1cm4gYXhpb3MuZGVsZXRlKCJsYW5ndWFnZXMvZGVsZXRlLyIuY29uY2F0KGlkKSkudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHsKICAgICAgICAgICAgICAgIGNvbnRleHQuY29tbWl0KCdNVVRfREVMRVRFX1BPUFVQX0NMT1NFJywgewogICAgICAgICAgICAgICAgICByb290OiB0cnVlCiAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgIGNvbnRleHQuZGlzcGF0Y2goJ0FDVF9BTExfTEFOR1VBR0VTJywgewogICAgICAgICAgICAgICAgICBjdXJyZW50X3BhZ2U6IDEsCiAgICAgICAgICAgICAgICAgIG5leHRfcGFnZTogMQogICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgfSkuY2F0Y2goZnVuY3Rpb24gKGV4Y2VwdGlvbikgewogICAgICAgICAgICAgICAgY29uc29sZS5sb2coZXhjZXB0aW9uKTsKICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgIGNhc2UgMjoKICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQzLnN0b3AoKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0sIF9jYWxsZWUzKTsKICAgIH0pKTsKCiAgICBmdW5jdGlvbiBBQ1RfREVMRVRFX0xBTkdVQUdFKF94NSwgX3g2KSB7CiAgICAgIHJldHVybiBfQUNUX0RFTEVURV9MQU5HVUFHRS5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogICAgfQoKICAgIHJldHVybiBBQ1RfREVMRVRFX0xBTkdVQUdFOwogIH0oKSwKICBBQ1RfU1RPUkVfTEFOR1VBR0U6IGZ1bmN0aW9uICgpIHsKICAgIHZhciBfQUNUX1NUT1JFX0xBTkdVQUdFID0gX2FzeW5jVG9HZW5lcmF0b3IoCiAgICAvKiNfX1BVUkVfXyovCiAgICByZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlNChjb250ZXh0LCBwYXlsb2FkKSB7CiAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlNCQoX2NvbnRleHQ0KSB7CiAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQ0LnByZXYgPSBfY29udGV4dDQubmV4dCkgewogICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgX2NvbnRleHQ0Lm5leHQgPSAyOwogICAgICAgICAgICAgIHJldHVybiBheGlvcy5wb3N0KCJsYW5ndWFnZXMvc3RvcmUiLCBwYXlsb2FkKS50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkgewogICAgICAgICAgICAgICAgdmFyIGRhdGEgPSByZXNwb25zZS5kYXRhOwogICAgICAgICAgICAgICAgY29udGV4dC5jb21taXQoJ01VVF9FTkRfTE9BRElORycsIHsKICAgICAgICAgICAgICAgICAgcm9vdDogdHJ1ZQogICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICBjb250ZXh0LmNvbW1pdCgnTVVUX05PVElGSUNBVElPTicsIGRhdGEsIHsKICAgICAgICAgICAgICAgICAgcm9vdDogdHJ1ZQogICAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAgICAgaWYgKGRhdGEuc3VjY2VzcykgewogICAgICAgICAgICAgICAgICBjb250ZXh0LmNvbW1pdCgnTVVUX0FMTF9ESUFMT0dfQ0xPU0UnLCBkYXRhLCB7CiAgICAgICAgICAgICAgICAgICAgcm9vdDogdHJ1ZQogICAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgICAgY29udGV4dC5kaXNwYXRjaCgnQUNUX0FMTF9MQU5HVUFHRVMnLCB7CiAgICAgICAgICAgICAgICAgICAgY3VycmVudF9wYWdlOiAxLAogICAgICAgICAgICAgICAgICAgIG5leHRfcGFnZTogMQogICAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICB9KS5jYXRjaChmdW5jdGlvbiAoZXhjZXB0aW9uKSB7CiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhleGNlcHRpb24pOwogICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgY2FzZSAyOgogICAgICAgICAgICAgIGNvbnRleHQuY29tbWl0KCdNVVRfUEFHRV9MT0FESU5HX0VORCcsIHsKICAgICAgICAgICAgICAgIHJvb3Q6IHRydWUKICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQ0LnN0b3AoKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0sIF9jYWxsZWU0KTsKICAgIH0pKTsKCiAgICBmdW5jdGlvbiBBQ1RfU1RPUkVfTEFOR1VBR0UoX3g3LCBfeDgpIHsKICAgICAgcmV0dXJuIF9BQ1RfU1RPUkVfTEFOR1VBR0UuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICAgIH0KCiAgICByZXR1cm4gQUNUX1NUT1JFX0xBTkdVQUdFOwogIH0oKSwKICBBQ1RfVVBEQVRFX0xBTkdVQUdFOiBmdW5jdGlvbiAoKSB7CiAgICB2YXIgX0FDVF9VUERBVEVfTEFOR1VBR0UgPSBfYXN5bmNUb0dlbmVyYXRvcigKICAgIC8qI19fUFVSRV9fKi8KICAgIHJlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWU1KGNvbnRleHQsIHBheWxvYWQpIHsKICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWU1JChfY29udGV4dDUpIHsKICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgc3dpdGNoIChfY29udGV4dDUucHJldiA9IF9jb250ZXh0NS5uZXh0KSB7CiAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICBfY29udGV4dDUubmV4dCA9IDI7CiAgICAgICAgICAgICAgcmV0dXJuIGF4aW9zLnBvc3QoImxhbmd1YWdlcy91cGRhdGUiLCBwYXlsb2FkKS50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkgewogICAgICAgICAgICAgICAgdmFyIGRhdGEgPSByZXNwb25zZS5kYXRhOwogICAgICAgICAgICAgICAgY29udGV4dC5jb21taXQoJ01VVF9FTkRfTE9BRElORycsIHsKICAgICAgICAgICAgICAgICAgcm9vdDogdHJ1ZQogICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICBjb250ZXh0LmNvbW1pdCgnTVVUX05PVElGSUNBVElPTicsIGRhdGEsIHsKICAgICAgICAgICAgICAgICAgcm9vdDogdHJ1ZQogICAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAgICAgaWYgKGRhdGEuc3VjY2VzcykgewogICAgICAgICAgICAgICAgICBjb250ZXh0LmNvbW1pdCgnTVVUX0FMTF9ESUFMT0dfQ0xPU0UnLCBkYXRhLCB7CiAgICAgICAgICAgICAgICAgICAgcm9vdDogdHJ1ZQogICAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgICAgY29udGV4dC5kaXNwYXRjaCgnQUNUX0FMTF9MQU5HVUFHRVMnLCB7CiAgICAgICAgICAgICAgICAgICAgY3VycmVudF9wYWdlOiAxLAogICAgICAgICAgICAgICAgICAgIG5leHRfcGFnZTogMQogICAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICB9KS5jYXRjaChmdW5jdGlvbiAoZXhjZXB0aW9uKSB7CiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhleGNlcHRpb24pOwogICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgY2FzZSAyOgogICAgICAgICAgICAgIGNvbnRleHQuY29tbWl0KCdNVVRfUEFHRV9MT0FESU5HX0VORCcsIHsKICAgICAgICAgICAgICAgIHJvb3Q6IHRydWUKICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQ1LnN0b3AoKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0sIF9jYWxsZWU1KTsKICAgIH0pKTsKCiAgICBmdW5jdGlvbiBBQ1RfVVBEQVRFX0xBTkdVQUdFKF94OSwgX3gxMCkgewogICAgICByZXR1cm4gX0FDVF9VUERBVEVfTEFOR1VBR0UuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICAgIH0KCiAgICByZXR1cm4gQUNUX1VQREFURV9MQU5HVUFHRTsKICB9KCkKfTsKdmFyIGN1c3RvbU11dGF0aW9ucyA9IHsKICBNVVRfQUxMX0xBTkdVQUdFX0RBVEE6IGZ1bmN0aW9uIE1VVF9BTExfTEFOR1VBR0VfREFUQShzdGF0ZSwgcGF5bG9hZCkgewogICAgc3RhdGUubGFuZ3VhZ2VzID0gcGF5bG9hZC5kYXRhOwogIH0KfTsKZXhwb3J0IGRlZmF1bHQgewogIHN0YXRlOiBzdGF0ZSwKICBnZXR0ZXJzOiBjdXN0b21HZXR0ZXJzLAogIG11dGF0aW9uczogY3VzdG9tTXV0YXRpb25zLAogIGFjdGlvbnM6IGN1c3RvbUFjdGlvbnMKfTs="},{"version":3,"sources":["/opt/lampp/htdocs/adminDictionary/src/store/language.js"],"names":["axios","state","languages","customGetters","GET_ALL_LANGUAGE_DATA","customActions","ACT_ALL_LANGUAGES","context","payload","commit","root","get","next_page","then","response","data","catch","exception","console","log","ACT_SEARCH_LANGUAGES","searchKeyword","ACT_DELETE_LANGUAGE","id","delete","dispatch","current_page","ACT_STORE_LANGUAGE","post","success","ACT_UPDATE_LANGUAGE","customMutations","MUT_ALL_LANGUAGE_DATA","getters","mutations","actions"],"mappings":"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","sourcesContent":["import axios from 'axios';\n\nconst state = {\n    languages: [],\n};\n\nconst customGetters = {\n    GET_ALL_LANGUAGE_DATA: function(state) {\n        return state.languages;\n    }\n};\n\nconst customActions = {\n    ACT_ALL_LANGUAGES: async function (context, payload) {\n        context.commit('MUT_PAGE_LOADING_START', { root: true });\n        await axios.get(`languages?page=${payload.next_page}`)\n            .then(response => {\n                let data = response.data.data;\n                context.commit('MUT_ALL_LANGUAGE_DATA', data);\n                context.commit('MUT_PAGINATION', data, { root: true });\n                context.commit('MUT_PAGE_LOADING_END', { root: true });\n            })\n            .catch(exception => {\n                context.commit('MUT_PAGE_LOADING_END', { root: true });\n                console.log(exception);\n            });\n        context.commit('MUT_PAGE_LOADING_END', { root: true });\n    },\n    ACT_SEARCH_LANGUAGES: async function (context, payload) {\n        await axios.get(`languages?page=${payload.next_page}&searchKeyword=${payload.searchKeyword}`)\n            .then(response => {\n                let data = response.data.data;\n                context.commit('MUT_ALL_LANGUAGE_DATA', data);\n                context.commit('MUT_PAGINATION', data, { root: true });\n            })\n            .catch(exception => {\n                console.log(exception);\n            });\n    },\n    ACT_DELETE_LANGUAGE: async function (context, id) {\n        await axios.delete(`languages/delete/${id}`)\n            .then(response => {\n                context.commit('MUT_DELETE_POPUP_CLOSE', { root: true });\n                context.dispatch('ACT_ALL_LANGUAGES', {\n                    current_page: 1,\n                    next_page: 1\n                });\n            })\n            .catch(exception => {\n                console.log(exception);\n            });\n    },\n    ACT_STORE_LANGUAGE: async function (context, payload) {\n        await axios.post(`languages/store`, payload)\n            .then(response => {\n                let data = response.data;\n                context.commit('MUT_END_LOADING', { root: true });\n                context.commit('MUT_NOTIFICATION', data, { root: true });\n                if(data.success) {\n                    context.commit('MUT_ALL_DIALOG_CLOSE', data, { root: true });\n                    context.dispatch('ACT_ALL_LANGUAGES', {\n                        current_page: 1,\n                        next_page: 1\n                    });\n                }\n            })\n            .catch(exception => {\n                console.log(exception);\n            });\n        context.commit('MUT_PAGE_LOADING_END', { root: true });\n    },\n    ACT_UPDATE_LANGUAGE: async function (context, payload) {\n        await axios.post(`languages/update`, payload)\n            .then(response => {\n                let data = response.data;\n                context.commit('MUT_END_LOADING', { root: true });\n                context.commit('MUT_NOTIFICATION', data, { root: true });\n                if(data.success) {\n                    context.commit('MUT_ALL_DIALOG_CLOSE', data, { root: true });\n                    context.dispatch('ACT_ALL_LANGUAGES', {\n                        current_page: 1,\n                        next_page: 1\n                    });\n                }\n            })\n            .catch(exception => {\n                console.log(exception);\n            });\n        context.commit('MUT_PAGE_LOADING_END', { root: true });\n    },\n};\n\nconst customMutations = {\n    MUT_ALL_LANGUAGE_DATA: function (state, payload) {\n        state.languages = payload.data;\n    }\n};\n\nexport default {\n    state,\n    getters: customGetters,\n    mutations: customMutations,\n    actions: customActions\n}"]}]}